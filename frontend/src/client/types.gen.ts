// This file is auto-generated by @hey-api/openapi-ts

export type AddFilterTransaction = {
    /**
     * amount added to debit account
     */
    amount: number;
    /**
     * transaction code
     */
    code: number;
    /**
     * commodity used
     */
    commodityUnit: string;
    /**
     * account name
     */
    creditAccountsFilter: Array<string>;
    /**
     * account name
     */
    debitAccount: string;
    /**
     * random hex u128 string
     */
    relatedId: string;
};

export type AddFilterTransactions = {
    /**
     * list of transactions
     */
    filterTransactions: Array<AddFilterTransaction>;
    /**
     * unix time milliseconds
     */
    fullDate2: number;
};

export type AddTransaction = {
    /**
     * amount added to debit account
     */
    amount: number;
    /**
     * transaction code
     */
    code: number;
    /**
     * commodity used
     */
    commodityUnit: string;
    /**
     * account name
     */
    creditAccount: string;
    /**
     * account name
     */
    debitAccount: string;
    /**
     * random hex u128 string
     */
    relatedId: string;
};

export type AddTransactions = {
    /**
     * unix time milliseconds
     */
    fullDate2: number;
    /**
     * list of transactions
     */
    transactions: Array<AddTransaction>;
};

export type Balance = {
    accountName: string;
    amount: number;
    commodityDecimal: number;
    commodityUnit: string;
};

export type IncomeStatement = {
    accountName: string;
    amounts: Array<number>;
    commodityDecimal: number;
    commodityUnit: string;
};

export type MigrateAccount = {
    /**
     * tigerbeetle ledger id
     */
    c: number;
    /**
     * account name
     */
    n: string;
    /**
     * tigerbeetle account id in hexadecimal
     */
    t: string;
};

export type MigrateCommodity = {
    /**
     * location of decimal point
     */
    decimalPlace: number;
    /**
     * tigerbeetle ledger number
     */
    id: number;
    /**
     * commodity unit used
     */
    unit: string;
};

export type QueryAccountBalancesBody = {
    accounts_glob: string;
    date?: number | null;
};

export type QueryAccountIncomeStatementBody = {
    accounts_glob: string;
    dates: Array<number>;
};

export type QueryTransactionsBody = {
    accounts_glob: string;
    date_newest: number;
    date_oldest: number;
};

export type RequestMigrate = {
    accounts: Array<MigrateAccount>;
    commodities: Array<MigrateCommodity>;
};

export type ResponseIncomeStatements = {
    dates: Array<number>;
    incomeStatements: Array<IncomeStatement>;
};

export type Transaction = {
    /**
     * transaction code
     */
    code: number;
    /**
     * location of decimal point
     */
    commodityDecimal: number;
    /**
     * commodity used
     */
    commodityUnit: string;
    /**
     * account name
     */
    creditAccount: string;
    /**
     * amount removed from credit account
     */
    creditAmount: number;
    /**
     * account name
     */
    debitAccount: string;
    /**
     * amount added to debit account
     */
    debitAmount: number;
    /**
     * unix time milliseconds
     */
    fullDate: number;
    /**
     * unit time milliseconds
     */
    fullDate2: number;
    /**
     * random hex u128 string
     */
    relatedId: string;
    /**
     * random hex u128 string
     */
    transferId: string;
};

export type Vec = Array<string>;

export type MutateAddData = {
    body: AddTransactions;
    path?: never;
    query?: never;
    url: '/mutate/add';
};

export type MutateAddErrors = {
    /**
     * Bad request error occurred
     */
    400: string;
    /**
     * Internal server error occurred
     */
    500: string;
};

export type MutateAddError = MutateAddErrors[keyof MutateAddErrors];

export type MutateAddResponses = {
    /**
     * Returns list of transaction ids
     */
    200: Vec;
};

export type MutateAddResponse = MutateAddResponses[keyof MutateAddResponses];

export type MutateImportCsvData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/mutate/import-csv';
};

export type MutateImportCsvErrors = {
    /**
     * Bad request error occurred
     */
    400: string;
    /**
     * Internal server error occurred
     */
    500: string;
};

export type MutateImportCsvError = MutateImportCsvErrors[keyof MutateImportCsvErrors];

export type MutateImportCsvResponses = {
    /**
     * Returns status 200 when import is complete
     */
    200: unknown;
};

export type MutateMigrateData = {
    body: RequestMigrate;
    path?: never;
    query?: never;
    url: '/mutate/migrate';
};

export type MutateMigrateErrors = {
    /**
     * Bad request error occurred
     */
    400: string;
    /**
     * Internal server error occurred
     */
    500: string;
};

export type MutateMigrateError = MutateMigrateErrors[keyof MutateMigrateErrors];

export type MutateMigrateResponses = {
    /**
     * Returns status 200 when migration is complete
     */
    200: unknown;
};

export type GetOpenapiData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/openapi';
};

export type GetOpenapiErrors = {
    /**
     * Internal server error occurred
     */
    500: string;
};

export type GetOpenapiError = GetOpenapiErrors[keyof GetOpenapiErrors];

export type GetOpenapiResponses = {
    /**
     * Returns openapi v3.1 as json
     */
    200: string;
};

export type GetOpenapiResponse = GetOpenapiResponses[keyof GetOpenapiResponses];

export type QueryAccountBalancesData = {
    body: QueryAccountBalancesBody;
    path?: never;
    query?: never;
    url: '/query/account-balances';
};

export type QueryAccountBalancesErrors = {
    /**
     * Bad request error occurred
     */
    400: string;
    /**
     * Internal server error occurred
     */
    500: string;
};

export type QueryAccountBalancesError = QueryAccountBalancesErrors[keyof QueryAccountBalancesErrors];

export type QueryAccountBalancesResponses = {
    /**
     * Returns list of account balances by filter
     */
    200: Array<Balance>;
};

export type QueryAccountBalancesResponse = QueryAccountBalancesResponses[keyof QueryAccountBalancesResponses];

export type QueryAccountIncomeStatementData = {
    body: QueryAccountIncomeStatementBody;
    path?: never;
    query?: never;
    url: '/query/account-income-statements';
};

export type QueryAccountIncomeStatementErrors = {
    /**
     * Bad request error occurred
     */
    400: string;
    /**
     * Internal server error occurred
     */
    500: string;
};

export type QueryAccountIncomeStatementError = QueryAccountIncomeStatementErrors[keyof QueryAccountIncomeStatementErrors];

export type QueryAccountIncomeStatementResponses = {
    /**
     * Returns list of balances by filter by date
     */
    200: ResponseIncomeStatements;
};

export type QueryAccountIncomeStatementResponse = QueryAccountIncomeStatementResponses[keyof QueryAccountIncomeStatementResponses];

export type QueryAccountNamesAllData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/query/account-names-all';
};

export type QueryAccountNamesAllErrors = {
    /**
     * Bad request error occurred
     */
    400: string;
    /**
     * Internal server error occurred
     */
    500: string;
};

export type QueryAccountNamesAllError = QueryAccountNamesAllErrors[keyof QueryAccountNamesAllErrors];

export type QueryAccountNamesAllResponses = {
    /**
     * Returns list of transaction ids
     */
    200: Array<string>;
};

export type QueryAccountNamesAllResponse = QueryAccountNamesAllResponses[keyof QueryAccountNamesAllResponses];

export type QueryAccountTransactionsData = {
    body: QueryTransactionsBody;
    path?: never;
    query?: never;
    url: '/query/account-transactions';
};

export type QueryAccountTransactionsErrors = {
    /**
     * Bad request error occurred
     */
    400: string;
    /**
     * Internal server error occurred
     */
    500: string;
};

export type QueryAccountTransactionsError = QueryAccountTransactionsErrors[keyof QueryAccountTransactionsErrors];

export type QueryAccountTransactionsResponses = {
    /**
     * Returns list of transactions by filter
     */
    200: Array<Transaction>;
};

export type QueryAccountTransactionsResponse = QueryAccountTransactionsResponses[keyof QueryAccountTransactionsResponses];

export type QueryCommoditiesAllData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/query/commodities-all';
};

export type QueryCommoditiesAllErrors = {
    /**
     * Bad request error occurred
     */
    400: string;
    /**
     * Internal server error occurred
     */
    500: string;
};

export type QueryCommoditiesAllError = QueryCommoditiesAllErrors[keyof QueryCommoditiesAllErrors];

export type QueryCommoditiesAllResponses = {
    /**
     * Returns list of commodities
     */
    200: Array<string>;
};

export type QueryCommoditiesAllResponse = QueryCommoditiesAllResponses[keyof QueryCommoditiesAllResponses];

export type QueryExportCsvData = {
    body: QueryTransactionsBody;
    path?: never;
    query?: never;
    url: '/query/export-csv';
};

export type QueryExportCsvErrors = {
    /**
     * Bad request error occurred
     */
    400: string;
    /**
     * Internal server error occurred
     */
    500: string;
};

export type QueryExportCsvError = QueryExportCsvErrors[keyof QueryExportCsvErrors];

export type QueryExportCsvResponses = {
    /**
     * Returns csv export
     */
    200: string;
};

export type QueryExportCsvResponse = QueryExportCsvResponses[keyof QueryExportCsvResponses];

export type QueryExportHledgerData = {
    body: QueryTransactionsBody;
    path?: never;
    query?: never;
    url: '/query/export-hledger';
};

export type QueryExportHledgerErrors = {
    /**
     * Bad request error occurred
     */
    400: string;
    /**
     * Internal server error occurred
     */
    500: string;
};

export type QueryExportHledgerError = QueryExportHledgerErrors[keyof QueryExportHledgerErrors];

export type QueryExportHledgerResponses = {
    /**
     * Returns hledger export
     */
    200: string;
};

export type QueryExportHledgerResponse = QueryExportHledgerResponses[keyof QueryExportHledgerResponses];

export type QueryPrepareAddFcfsData = {
    body: AddFilterTransactions;
    path?: never;
    query?: never;
    url: '/query/prepare-add';
};

export type QueryPrepareAddFcfsErrors = {
    /**
     * Bad request error occurred
     */
    400: string;
    /**
     * Internal server error occurred
     */
    500: string;
};

export type QueryPrepareAddFcfsError = QueryPrepareAddFcfsErrors[keyof QueryPrepareAddFcfsErrors];

export type QueryPrepareAddFcfsResponses = {
    /**
     * Returns a prepared add payload to be run with the route PUT /app
     */
    200: AddTransactions;
};

export type QueryPrepareAddFcfsResponse = QueryPrepareAddFcfsResponses[keyof QueryPrepareAddFcfsResponses];

export type GetVersionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/version';
};

export type GetVersionResponses = {
    /**
     * Returns crate version
     */
    200: string;
};

export type GetVersionResponse = GetVersionResponses[keyof GetVersionResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:5173' | (string & {});
};